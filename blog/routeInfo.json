{"template":"__react_static_root__/src/pages/blog.js","sharedHashesByProp":{},"data":{"posts":[{"id":0,"userId":1,"title":"nodejs递归遍历md文件","year":"2020","month":"7","path":"D:/phpstudy_pro/WWW/xiaoxiao/cat/src/md/2020/7/nodejs递归遍历md文件.md","body":"## nodejs遍历md文件，并生成博客列表\r\n\r\n我的新版博客打算使用`react-static`+`markdown`，所以写了个递归遍历`md`文件的方法。\r\n\r\n``` js\r\nvar id = 0;\r\n\r\nfunction readFileList(dir, filesList = []) {\r\n    // 列出所有文件或目录\r\n    const files = fs.readdirSync(dir);\r\n    // 遍历\r\n    files.forEach((item, index) => {\r\n        // 计算绝对路径\r\n        var fullPath = path.join(dir, item);\r\n        // 获取状态\r\n        const stat = fs.statSync(fullPath);\r\n        // 如果是目录\r\n        if (stat.isDirectory()) {\r\n            // 递归\r\n            readFileList(path.join(dir, item), filesList);\r\n        } else {\r\n            // 否则是文件 判断文件后缀名\r\n            if (item.slice(-3).toLowerCase() == \".md\") {\r\n                // 文件分隔符\r\n                fullPath = fullPath.replace(/\\\\/g, \"/\");\r\n                // 分割\r\n                var path_sp = fullPath.split(\"/\");\r\n                // 添加到列表\r\n                filesList.push({\r\n                    id: id++,\r\n                    userId: 1,\r\n                    title: item.slice(0, -3),\r\n                    year: path_sp[path_sp.length - 3],\r\n                    month: path_sp[path_sp.length - 2],\r\n                    path: fullPath,\r\n                    body: fs.readFileSync(fullPath).toString(),\r\n                });\r\n            }\r\n        }\r\n    });\r\n    return filesList;\r\n}\r\n// 实参\r\nvar blog_md_list = [];\r\n// 递归遍历md文件\r\nreadFileList(path.join(__dirname, \"public\", \"md\"), blog_md_list);\r\n```\r\n"},{"id":1,"userId":1,"title":"react-static html头部meta问题","year":"2020","month":"8","path":"D:/phpstudy_pro/WWW/xiaoxiao/cat/src/md/2020/8/react-static html头部meta问题.md","body":"## react-static生成的html头部信息修改问题\r\n\r\n#### 事情起因\r\n\r\n`react-static` 生成的项目默认有一个默认的 `html` 模板，目录： `tmp/dev-server` 。\r\n\r\n``` html\r\n<!DOCTYPE html>\r\n<html lang=\"en\" data-reactroot=\"\">\r\n\r\n<head>\r\n    <meta charSet=\"UTF-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=5, shrink-to-fit=no\" />\r\n</head>\r\n\r\n<body>\r\n    <div id=\"root\"></div>\r\n</body>\r\n\r\n</html>\r\n```\r\n\r\n然而，改这个文件然后 `yarn run build` 之后会发现，毫无变化。  \r\n找到官方文档，有这么一段说明：\r\n\r\n``` jsx\r\n  // An optional custom React component that renders the base\r\n  // Document for every page, including the dev server. If used, it must utilize the\r\n  // `Html` , `Head` , `Body` and `children` for react-static to work. The optional\r\n  // `siteProps` prop will contain any data returned by `getSiteProps` in your config\r\n  // and `renderMeta` prop refers to any data you potentially assigned to it during\r\n  // the custom `renderToHtml` hook.\r\n  Document: ({ Html, Head, Body, children, siteProps, renderMeta }) => (\r\n    <Html lang=\"en-US\">\r\n      <Head>\r\n        <meta charSet=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n      </Head>\r\n      <Body>{children}</Body>\r\n    </Html>\r\n  ),\r\n```\r\n\r\nok，开搞。  \r\n\r\n然而，事情并没有这么简单，加了这个配置后，问题又来了：\r\n\r\n``` \r\nExporting HTML across 4 threads...\r\n  ReferenceError: React is not defined\r\n```\r\n\r\n???  \r\n什么鬼？React-static里面没有引入React？开什么玩笑？  \r\n去网上找了找，并没有找到解决方案，倒是发现不少 `react-static` 的广告文。。。  \r\n得，只能自己动手。\r\n\r\n#### 解决方案\r\n\r\n既然报了 `React is not defined` 错误，那我就个干脆手动引入吧。\r\n\r\n``` js\r\nimport React from \"react\"\r\n```\r\n\r\n问题解决。\r\n\r\n#### 总结\r\n\r\n`react-static` 不自动引入 `React` ，也是醉了。\r\n"},{"id":2,"userId":1,"title":"test","year":"2020","month":"8","path":"D:/phpstudy_pro/WWW/xiaoxiao/cat/src/md/2020/8/test.md","body":"## Install\r\n\r\n```bash\r\nnpm i @uiw/react-markdown-editor\r\n```\r\n\r\n## Document\r\n\r\nOfficial document [demo preview](https://uiwjs.github.io/react-markdown-editor/) ([🇨🇳中国镜像网站](http://uiw.gitee.io/react-markdown-editor/))\r\n\r\n## Basic Usage\r\n\r\n```jsx\r\nimport MarkdownEditor from '@uiw/react-markdown-editor';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Dome = () => (\r\n  <MarkdownEditor\r\n    value={this.state.markdown}\r\n    onChange={this.updateMarkdown}\r\n  />\r\n);\r\n```\r\n\r\ncontrolled usage\r\n\r\n```jsx\r\nimport MarkdownEditor from '@uiw/react-markdown-editor';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      markdown: '# This is a H1  \\n## This is a H2  \\n###### This is a H6',\r\n    };\r\n    this.updateMarkdown = this.updateMarkdown.bind(this);\r\n  }\r\n\r\n  updateMarkdown(editor, data, value) {\r\n    this.setState({ markdown: value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MarkdownEditor\r\n        value={this.state.markdown}\r\n        onChange={this.updateMarkdown}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('app')\r\n);\r\n```\r\n\r\n## Props\r\n\r\n- value (*string*) - the raw markdown that will be converted to html (**required**)\r\n- `visble?:boolean` - Shows a preview that will be converted to html.\r\n- `toolbars?:array` - Tool display settings.\r\n- `toolbarsMode?:array` - Tool display settings.\r\n- onChange (*function(editor: IInstance, data: CodeMirror.EditorChange, value: string)*) - called when a change is made (**required**)\r\n\r\n> [Other Props Options](https://github.com/uiwjs/react-markdown-editor/blob/8de6abbf628b6d272d7da1c28e985fbbcba71b93/src/components/CodeMirror/index.tsx#L21-L60)\r\n\r\n\r\n### Development\r\n\r\n```bash\r\nnpm run dev\r\nnpm run type-check:watch\r\nnpm run doc\r\n```\r\n\r\n## License\r\n\r\n[MIT © Kenny Wong](./LICENSE)"},{"id":3,"userId":1,"title":"响应式布局","year":"2020","month":"8","path":"D:/phpstudy_pro/WWW/xiaoxiao/cat/src/md/2020/8/响应式布局.md","body":"## 如何使用响应式布局\r\n只需要在`css`文件中加入`@media`指令：\r\n```css\r\n@media (min-width: 600px) and (max-width: 900px) {\r\n  .body {\r\n    background-color: #aaa;\r\n  }\r\n}\r\n```\r\n\r\n然后在`@media`中设置样式。"}]},"path":"blog"}
